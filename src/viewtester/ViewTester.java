/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewtester;

import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

/**
 *
 * @author pavel.svihalek
 */
public class ViewTester extends javax.swing.JFrame {

    File currentDir;
    BufferedImage inputImage;
    BufferedImage outputImage;
    Mat inputMat;
    Mat outputMat;
    
    /**
     * Creates new form ViewTester
     */
    public ViewTester() {
        inputMat = new Mat();
        outputMat = new Mat();
        readInputFromFile("disp3.jpg");
        inputImage = MatToBufferedImage(inputMat);
        outputImage = MatToBufferedImage(outputMat);
        

        initComponents();
        pack();
    }


    public BufferedImage MatToBufferedImage(Mat frame) {
        int type = 0;
        if (frame.channels() == 1) {
            type = BufferedImage.TYPE_BYTE_GRAY;
        } else if (frame.channels() == 3) {
            type = BufferedImage.TYPE_3BYTE_BGR;
        }
        BufferedImage image = new BufferedImage(frame.width(), frame.height(), type);
        WritableRaster raster = image.getRaster();
        DataBufferByte dataBuffer = (DataBufferByte) raster.getDataBuffer();
        byte[] data = dataBuffer.getData();
        frame.get(0, 0, data);

        return image;
    }

    /**
     * nahraje obrazek jako Mat ze souboru
     * @param fileName
     * @return 
     */
    boolean readInputFromFile(String fileName) {
        inputMat = Imgcodecs.imread(fileName);
        if (inputMat.empty()) {
            System.err.println("Nelze nacist obrazek: " + fileName);
            return false;
        }
        outputMat = inputMat;
        outToGrayScale();
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar = new javax.swing.JToolBar();
        jButton_toolBar_vyfotit = new javax.swing.JButton();
        jButton_toolBar_zeSouboru = new javax.swing.JButton();
        jPanelObrazky = new JPanel_DoubleImage(inputImage, outputImage);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tester funkci OpenCV knihovny");

        jToolBar.setRollover(true);

        jButton_toolBar_vyfotit.setText("Vyfotit");
        jButton_toolBar_vyfotit.setFocusable(false);
        jButton_toolBar_vyfotit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_toolBar_vyfotit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar.add(jButton_toolBar_vyfotit);

        jButton_toolBar_zeSouboru.setText("Ze souboru");
        jButton_toolBar_zeSouboru.setFocusable(false);
        jButton_toolBar_zeSouboru.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_toolBar_zeSouboru.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_toolBar_zeSouboru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_toolBar_zeSouboruActionPerformed(evt);
            }
        });
        jToolBar.add(jButton_toolBar_zeSouboru);

        getContentPane().add(jToolBar, java.awt.BorderLayout.PAGE_START);

        jPanelObrazky.setLayout(new javax.swing.BoxLayout(jPanelObrazky, javax.swing.BoxLayout.X_AXIS));
        getContentPane().add(jPanelObrazky, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_toolBar_zeSouboruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_toolBar_zeSouboruActionPerformed
        JFileChooser fc = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("jpg", "bmp", "jpeg", "gif", "tif", "tiff", "png");
        fc.addChoosableFileFilter(filter);
        fc.setFileFilter(filter);
        fc.setDialogTitle("Vyberte soubor s obrazkem");
        if(currentDir!=null) {
            fc.setCurrentDirectory(currentDir);
        }
        int returnVal = fc.showOpenDialog(this);
 
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            currentDir = file.getParentFile();
            readInputFromFile(file.getPath());
            inputImage = MatToBufferedImage(inputMat);
            outputImage = MatToBufferedImage(outputMat);
            ((JPanel_DoubleImage)jPanelObrazky).setImageLeft(inputImage);
            ((JPanel_DoubleImage)jPanelObrazky).setImageRight(outputImage);
            repaint();
            pack();
        } 
    }//GEN-LAST:event_jButton_toolBar_zeSouboruActionPerformed

    private void outToGrayScale() {
        Mat newOutputMat = new Mat(outputMat.width(), outputMat.height(), CvType.CV_8UC1);
        Imgproc.cvtColor(outputMat, newOutputMat, Imgproc.COLOR_RGB2GRAY);
        outputMat = newOutputMat;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewTester().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_toolBar_vyfotit;
    private javax.swing.JButton jButton_toolBar_zeSouboru;
    private javax.swing.JPanel jPanelObrazky;
    private javax.swing.JToolBar jToolBar;
    // End of variables declaration//GEN-END:variables
}
